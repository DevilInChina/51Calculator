C51 COMPILER V7.10   LED                                                                   01/02/2021 13:43:35 PAGE 1   


C51 COMPILER V7.10, COMPILATION OF MODULE LED
OBJECT MODULE PLACED IN led.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE led.c LARGE BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "calculator.h"
   2          
   3          
   4          
   5          uchar KEY_CODE[] = {
   6                  0xee, 0xde, 0xbe, 0x7e,
   7                  0xed, 0xdd, 0xbd, 0x7d,
   8                  0xeb, 0xdb, 0xbb, 0x7b,
   9                  0xe7, 0xd7, 0xb7, 0x77
  10          };
  11          
  12          uchar *ops = "123+456-789*.0=/";
  13          
  14          /**
  15          1 2 3 +
  16          4 5 6 -
  17          7 8 9 *
  18          . 0 = /
  19          
  20          ( ) ~ c
  21          */
  22          
  23          sbit EN = P2 ^7;
  24          sbit RS = P2 ^6;
  25          sbit RW = P2 ^5;
  26          
  27          sbit K1 = P1 ^0;
  28          sbit K2 = P1 ^1;
  29          sbit K3 = P1 ^2;
  30          sbit K4 = P1 ^3;
  31          sbit K5 = P1 ^4;
  32          sbit K6 = P1 ^5;
  33          sbit K7 = P1 ^6;
  34          sbit K8 = P1 ^7;
  35          sbit BEEP = P2 ^5;
  36          uchar index = 0;
  37          uchar num = 0xff;
  38          uchar bef = 0xff;
  39          //      uchar start=0;
  40          
  41          
  42          CAL_STATE state = INIT;
  43          unsigned char operator1, operator2;
  44          unsigned char operator3, operator4;
  45          double operand[3];
  46          double operand1[3];
  47          uchar QUEUE[MAX_LEN];
  48          
  49          
  50          void main() {
  51   1          init();
  52   1          while (1) {
  53   2              bef = num;
  54   2              scanf2(&num);
  55   2              stateChange();
C51 COMPILER V7.10   LED                                                                   01/02/2021 13:43:35 PAGE 2   

  56   2          }
  57   1      }
  58          
  59          
  60          void stateChange() {
  61   1          states[state]();
  62   1      }
  63          
  64          void scanf2(uchar *var) {
  65   1          uchar temp;
  66   1          int q = 1;
  67   1          temp = q;
  68   1          q = 0;
  69   1          while (1) {
  70   2              P3 = 0xff;
  71   2              if (K1 == 0) {
  72   3                  delay100MS();
  73   3                  if (K1 == 0) {
  74   4                      while (!K1);
  75   4                      *var = '(';
  76   4                      break;
  77   4                  }
  78   3              }
  79   2              if (K2 == 0) {
  80   3                  delay100MS();
  81   3                  if (K2 == 0) {
  82   4                      while (!K2);
  83   4                      *var = ')';
  84   4                      break;
  85   4                  }
  86   3              }
  87   2              if (K3 == 0) {
  88   3                  delay100MS();
  89   3                  if (K3 == 0) {
  90   4                      while (!K3);
  91   4                      *var = '~';
  92   4                      break;
  93   4                  }
  94   3              }
  95   2              if (K4 == 0) {
  96   3                  delay100MS();
  97   3                  if (K4 == 0) {
  98   4                      while (!K4);
  99   4                      clear();
 100   4                      state = INIT;
 101   4                      index = 0;
 102   4                      num = '+';
 103   4                      break;
 104   4                  }
 105   3              }
 106   2      
 107   2              P3 = 0x0f;
 108   2              if (P3 != 0x0f) {
 109   3                  delay100MS();
 110   3                  temp = P3;
 111   3                  P3 = 0xf0;
 112   3                  if (P3 != 0xf0) {
 113   4                      num = temp | P3;
 114   4                      for (q = 0; q < 16; q++) if (num == KEY_CODE[q]) *var = ops[q];
 115   4                      break;
 116   4                  }
 117   3              }
C51 COMPILER V7.10   LED                                                                   01/02/2021 13:43:35 PAGE 3   

 118   2      
 119   2          }
 120   1          if (state == INIT) clear();
 121   1      }
 122          
 123          void PushOperArray(uchar *arr, int i, int locationOperand) {
 124   1          if (bef != ')') {
 125   2              int n = 0;
 126   2              double total = 0;
 127   2              uchar j = 0;
 128   2              if (arr[0] == '~') {
 129   3                  for (j = 1; j < i; j++) {
 130   4                      if (arr[j] == 0x2e)
 131   4                          n = i - j - 1;
 132   4                      else total = total * 10 + (arr[j] - 0x30);
 133   4                  }
 134   3                  for (; n > 0; n--)
 135   3                      total /= 10;
 136   3                  operand[locationOperand] = sqrt(total);
 137   3              } else {
 138   3                  for (j = 0; j < i; j++) {
 139   4                      if (arr[j] == 0x2e)
 140   4                          n = i - j - 1;
 141   4                      else total = total * 10 + (arr[j] - 0x30);
 142   4                  }
 143   3                  for (; n > 0; n--)
 144   3                      total /= 10;
 145   3                  operand[locationOperand] = total;
 146   3              }
 147   2      
 148   2          }
 149   1      }
 150          
 151          void delay5MS() {
 152   1          int n = 3000;
 153   1          while (n--);
 154   1      }
 155          
 156          void delay100MS() {
 157   1          uint n = 8000;
 158   1          while (n--);
 159   1      }
 160          
 161          void writeCMD(uchar com) {
 162   1          P0 = com;
 163   1          RS = 0;
 164   1          RW = 0;
 165   1          delay5MS();
 166   1          EN = 1;
 167   1          delay5MS();
 168   1          EN = 0;
 169   1      }
 170          
 171          void showData(uchar dat) {
 172   1          // EN = 1;
 173   1          RW = 1;
 174   1          RS = 0;
 175   1          if (P0 == 0x11) {
 176   2              writeCMD(0xC0);
 177   2          }
 178   1          P0 = dat;
 179   1          RS = 1;
C51 COMPILER V7.10   LED                                                                   01/02/2021 13:43:35 PAGE 4   

 180   1          RW = 0;
 181   1          EN = 1;
 182   1          delay5MS();
 183   1          EN = 0;
 184   1      }
 185          
 186          void init() {
 187   1          EN = 0;
 188   1          writeCMD(0x38);
 189   1          writeCMD(0x0e);
 190   1          writeCMD(0x06);
 191   1          writeCMD(0x01);
 192   1          writeCMD(0x80);
 193   1      }
 194          
 195          void clear() {
 196   1          EN = 0;
 197   1          writeCMD(0x01);
 198   1      }
 199          
 200          void firstCaculate() {
 201   1          double num1, num2, ans;
 202   1          char str[] = "ERROR";
 203   1          int m = 0;
 204   1          unsigned char op;
 205   1          num1 = operand[0];
 206   1          num2 = operand[1];
 207   1          op = operator1;
 208   1          switch (op) {
 209   2              case '+':
 210   2                  ans = num1 + num2;
 211   2                  break;
 212   2              case '-':
 213   2                  ans = num1 - num2;
 214   2                  break;
 215   2              case '*':
 216   2                  ans = num1 * num2;
 217   2                  break;
 218   2              case '/':
 219   2                  if (operand[1] != 0) {
 220   3                      ans = num1 / num2;
 221   3                  } else {
 222   3                      delay5MS();
 223   3                      clear();
 224   3                      while (1) {
 225   4                          if (str[m] == '\0')
 226   4                              break;
 227   4                          else {
 228   5                              showData(str[m]);
 229   5                              m++;
 230   5                          }
 231   4                      }
 232   3                      state = INIT;
 233   3                  }
 234   2                  break;
 235   2          }
 236   1      
 237   1          operand[0] = ans;
 238   1      }
 239          
 240          void lastCaculate() {
 241   1          double num1, num2, ans;
C51 COMPILER V7.10   LED                                                                   01/02/2021 13:43:35 PAGE 5   

 242   1          unsigned char op;
 243   1          char str[] = "ERROR";
 244   1          int m = 0;
 245   1          num1 = operand[1];
 246   1          num2 = operand[2];
 247   1          op = operator2;
 248   1          switch (op) {
 249   2              case '+':
 250   2                  ans = num1 + num2;
 251   2                  break;
 252   2              case '-':
 253   2                  ans = num1 - num2;
 254   2                  break;
 255   2              case '*':
 256   2                  ans = num1 * num2;
 257   2                  break;
 258   2              case '/':
 259   2                  if (operand[2] != 0) {
 260   3                      ans = num1 / num2;
 261   3                  } else {
 262   3                      delay5MS();
 263   3                      clear();
 264   3                      while (1) {
 265   4                          if (str[m] == '\0')
 266   4                              break;
 267   4                          else {
 268   5                              showData(str[m]);
 269   5                              m++;
 270   5                          }
 271   4                      }
 272   3                      state = INIT;
 273   3                  }
 274   2                  break;
 275   2          }
 276   1          operand[1] = ans;
 277   1      }
 278          
 279          
 280          void showAnswer() {
 281   1          double ans = operand[0];
 282   1          char str[MAX_LEN * 2];
 283   1          uchar m;
 284   1          sprintf(str, "%g", ans);
 285   1          m = 0;
 286   1          while (str[m++]);
 287   1          writeCMD(0x4f + 0x80);
 288   1          writeCMD(0x04);
 289   1          --m;
 290   1          while (m--) showData(str[m]);
 291   1      }
 292          
 293          void beep() {
 294   1          unsigned char q, j;
 295   1          for (q = 0; q < 100; q++) {
 296   2              BEEP = !BEEP;
 297   2              for (j = 0; j < 250; j++)
 298   2                  _nop_();
 299   2          }
 300   1          BEEP = 1;
 301   1      }


C51 COMPILER V7.10   LED                                                                   01/02/2021 13:43:35 PAGE 6   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   4734    ----
   CONSTANT SIZE    =     32    ----
   XDATA SIZE       =     91      92
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
